// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum PayStatus {
  PENDING
  SUCCESS
  CANCELED
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  password    String
  name        String
  email       String?
  address     String?
  mobile      String?
  profile_url String?
  token       String
  role        UserRole  @default(USER)
  cart        Cart?     @relation(fields: [cart_id], references: [id])
  cart_id     Int?
  invoice     Invoice[]
  item        Item[]
}

model TelegramUser {
  id           Int      @id @default(autoincrement())
  uid          String   @unique
  username     String?
  fname        String
  lname        String?
  bio          String?
  lang         String
  rude_counter Int      @default(0)
  role         UserRole @default(USER)
  mobile       String?
}

model Device {
  id         Int     @id @default(autoincrement())
  device_id  String?
  ip_address String
}

model Item {
  id         Int         @id @default(autoincrement())
  title      String      @unique
  caption    String?
  price      String
  stock      Boolean
  user       User?       @relation(fields: [user_id], references: [id])
  user_id    Int?
  feature    Feature[]
  image      ItemImage[]
  category   Category?   @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model ItemImage {
  id      Int    @id @default(autoincrement())
  url     String
  item    Item?  @relation(fields: [item_id], references: [id])
  item_id Int
}

model Category {
  id    Int    @id @default(autoincrement())
  title String @unique
  item  Item[]
}

model Feature {
  id      Int    @id @default(autoincrement())
  key     String
  value   String
  item    Item?  @relation(fields: [item_id], references: [id])
  item_id Int
}

model Cart {
  id   Int    @id @default(autoincrement())
  user User[]
}

model Invoice {
  id          Int       @id @default(autoincrement())
  total_price BigInt?
  status      PayStatus @default(PENDING)
  user        User?     @relation(fields: [user_id], references: [id])
  user_id     Int?
}

model RudeWord {
  id    Int    @id @default(autoincrement())
  title String @unique
}
